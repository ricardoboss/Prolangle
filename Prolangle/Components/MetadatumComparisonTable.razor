@inject ILanguageComparer Comparer;

@code {

	[Parameter]
	public required ILanguage TargetLanguage { get; set; }

	[Parameter]
	public required IReadOnlyList<ILanguage> RevealedLanguages { get; set; }

	private static string DirectionToString(ComparisonDirection comparisonDirection)
	{
		return comparisonDirection switch
		{
			ComparisonDirection.Equal => "",
			ComparisonDirection.Up => "\u25b2",
			ComparisonDirection.Down => "\u25bc",
			_ => throw new ArgumentOutOfRangeException(nameof(comparisonDirection), comparisonDirection, null),
		};
	}

}

<Table Responsive="true" Hoverable="true">
	<TableHeader>
		<TableRow>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Language</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Type System</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Execution Model</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Memory Management</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Syntax Style</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Known For Building</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Paradigms</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">TIOBE Rating</TableHeaderCell>
			<TableHeaderCell TextAlignment="TextAlignment.Center">Appearance Year</TableHeaderCell>
		</TableRow>
	</TableHeader>
	<TableBody>
		@foreach (var language in RevealedLanguages)
		{
			var comparison = Comparer.Compare(TargetLanguage, language);

			<TableRow>
				<TableRowHeader Style="white-space: nowrap; vertical-align: middle">@language.Name</TableRowHeader>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.TypeSystemMatch">
						<LanguageMetadatum Overlap="comparison.TypeSystem" Value="language.Typing"
						                   Exclude="TypeSystem.None"/>
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.CompiledMatch">
						@(language.Compiled ? "Compiled" : "Interpreted")
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.MemoryManagementMatch">
						<LanguageMemoryManagement MemoryManagement="language.MemoryManagement"/>
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.SyntaxStyleMatch">
						<LanguageSyntaxStyle SyntaxStyle="language.SyntaxStyle"/>
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.ApplicationsMatch">
						<LanguageMetadatum Overlap="comparison.Applications"
						                   Value="language.KnownForBuilding" Exclude="Applications.None"/>
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.ParadigmsMatch">
						<LanguageMetadatum Overlap="comparison.Paradigms" Value="language.Paradigms"
						                   Exclude="Paradigms.None"/>
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.TiobeRatingMatch">
						@(language.TiobeRating?.ToString() ?? "None")
						@DirectionToString(comparison.TiobeRatingDirection)
					</MatchDisplay>
				</TableRowCell>
				<TableRowCell>
					<MatchDisplay MatchType="comparison.AppearanceYearMatch">
						@language.AppearanceYear
						@DirectionToString(comparison.AppearanceYearDirection)
					</MatchDisplay>
				</TableRowCell>
			</TableRow>
		}
	</TableBody>
</Table>

<!--suppress CssUnresolvedCustomProperty -->
<style>
	thead > tr > th {
		white-space: nowrap;
	}

	tbody > tr > td {
		--reveal-duration: 0.5s;
		--reveal-delay: 0.35s;

		animation: fade-in var(--reveal-duration) forwards;
		opacity: 0;
	}

	tbody > tr > td {
		vertical-align: middle !important;
	}

	tbody > tr > td:nth-child(1) {
		animation-delay: calc(0 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(2) {
		animation-delay: calc(1 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(3) {
		animation-delay: calc(2 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(4) {
		animation-delay: calc(3 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(5) {
		animation-delay: calc(4 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(6) {
		animation-delay: calc(5 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(7) {
		animation-delay: calc(6 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(8) {
		animation-delay: calc(7 * var(--reveal-delay));
	}

	tbody > tr > td:nth-child(9) {
		animation-delay: calc(8 * var(--reveal-delay));
	}

	@@keyframes fade-in {
		0% {
			opacity: 0;
		}
		100% {
			opacity: 1;
		}
	}
</style>
