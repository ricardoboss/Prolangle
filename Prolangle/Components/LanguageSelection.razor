<style>
	.language-selection-wrapper {
		display: flex;
		justify-content: space-between;
	}
</style>

<Div class="language-selection-wrapper" Margin="Margin.Is2.OnY">
	<BlazoredTypeahead SearchMethod="Search"
	                   placeholder="Type the name of a language…"
	                   ShowDropDownOnFocus="true"
	                   MaximumSuggestions="100"
	                   @bind-Value="SelectedLanguage">
		<SelectedTemplate>
			@context.Name
		</SelectedTemplate>
		<ResultTemplate>
			@context.Name
		</ResultTemplate>
		<NotFoundTemplate>
			<span style="font-style: italic">This language is not available.</span>
		</NotFoundTemplate>
	</BlazoredTypeahead>

	<Button @onclick="Guess" Margin="Margin.Is2.FromStart">Guess</Button>
</Div>

@code {
	private string Query { get; set; } = "";

	private ILanguage? SelectedLanguage { get; set; }

	private Task<IEnumerable<ILanguage>> Search(string query)
	{
		Query = query;

		var results = AvailableLanguages
			.Where(l => l.Name.Contains(Query, StringComparison.OrdinalIgnoreCase))
			.OrderBy(l => l.Name);

		return Task.FromResult<IEnumerable<ILanguage>>(results);
	}

	[Parameter]
	public required IReadOnlyList<ILanguage> AvailableLanguages { get; set; }

	[Parameter]
	public EventCallback<ILanguage> OnLanguageSelected { get; set; }

	private async Task Guess()
	{
		if (SelectedLanguage is null)
			return;

		await OnLanguageSelected.InvokeAsync(SelectedLanguage);

		SelectedLanguage = null;
	}

}
