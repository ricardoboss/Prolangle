@page "/Snippets"

@using Prolangle.Components
@using Prolangle.Services
@using Prolangle.Languages.Framework
@using Prolangle.Snippets

@inject GuessGame GuessGame
@inject GameSeeder GameSeeder
@inject LanguageSnippetProvider LanguageSnippetProvider

<style>
	code {
		background: transparent;
	}

	.snippet-language {
		padding: 0.5em;
    	border-radius: 0.5em;
    	color: var(--color-on-match-inner);
	}

	.snippet-language > span {
		padding: 0.3em 0.5em;
        background: var(--color-match-inner);
        border-radius: 0.35em;
    }

	.snippet-language-match {
		color: var(--color-on-exact-match);
		background-color: var(--color-exact-match);
	}

	.snippet-language-no-match {
		color: var(--color-on-no-match);
		background-color: var(--color-no-match);
	}
</style>

<Heading Size="HeadingSize.Is1">Guess a Language</Heading>
<Heading Size="HeadingSize.Is2">â€¦based on a sample code snippet</Heading>

@if (_won)
{
	<Heading Size="HeadingSize.Is3">You won!</Heading>

	@if (Snippet is IAttributedCodeSnippet attributedSnippet)
	{
		<Paragraph Margin="Margin.Is2.FromBottom">
			This snippet was

			@if (Uri.TryCreate(attributedSnippet.Attribution, UriKind.Absolute, out Uri? uri))
			{
				<span> from: <a href="@uri">@uri</a></span>
			}
			else
			{
				<span> written by @attributedSnippet.Attribution</span>
			}

			@if (attributedSnippet.License is not { Length: > 0 } license)
			{
				<span>.</span>
			}
			else
			{
				<span>, licensed as follows: <strong style="font-weight: 500">@license</strong>.</span>
			}
		</Paragraph>
	}

	<Div Padding="Padding.Is1.FromBottom">
		<ShareCodeSnippetButton RevealedLanguages="RevealedLanguages">
			Share results
		</ShareCodeSnippetButton>
	</Div>

	<Div Padding="Padding.Is1.FromBottom">
		<NextGameTimer/>
	</Div>
}
else
{
	<LanguageSelection AvailableLanguages="@AvailableLanguages" RevealedLanguages="@RevealedLanguages"
	                   OnLanguageSelected="@OnLanguageSelected"/>
}

<code>
	<pre>
        @_concealedSourceCode
    </pre>
</code>

<div style="display: flex; flex-wrap: wrap; flex-direction: row; gap: 1em;">
	@foreach (var language in RevealedLanguages)
	{
		@if (language == TargetLanguage)
		{
			<span class="snippet-language snippet-language-match">
				<span>@language.Name</span>
			</span>
		}
		else
		{
			<span class="snippet-language snippet-language-no-match">
				<span>@language.Name</span>
			</span>
		}
	}
</div>

@code
{
	private IReadOnlyList<ILanguage> AvailableLanguages => LanguageSnippetProvider.SupportedLanguages.Where(l => !RevealedLanguages.Contains(l)).ToList();
	private List<ILanguage> RevealedLanguages { get; } = [];
	private ILanguage? TargetLanguage { get; set; }
	private ICodeSnippet? Snippet { get; set; }
	private bool _won;

	private SnippetRevealer? _snippetRevealer;

	private string? _concealedSourceCode;

	protected override void OnInitialized()
	{
		TargetLanguage = GuessGame!.SnippetGameLanguage;
		Snippet = LanguageSnippetProvider!.GetSnippet(TargetLanguage);

		_snippetRevealer = new SnippetRevealer(GameSeeder, Snippet.SourceCode, useJitter: true);

		_concealedSourceCode = _snippetRevealer.RevealMore();
	}

	private void OnLanguageSelected(ILanguage language)
	{
		RevealedLanguages.Add(language);

		var result = TargetLanguage!.Id == language.Id;

		if (result)
		{
			_won = true;
			_snippetRevealer!.Win();

			_concealedSourceCode = Snippet!.SourceCode;
		}
		else
		{
			_concealedSourceCode = _snippetRevealer!.RevealMore();
		}

		StateHasChanged();
	}
}
